// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgramsManager.DAL.Database;

#nullable disable

namespace ProgramsManager.DAL.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20230623155440_deleteIdOrder")]
    partial class deleteIdOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.OrderPlate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PlateId");

                    b.ToTable("OrdersPlates");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Plate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateActivity")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Offer")
                        .HasColumnType("bit");

                    b.Property<string>("UIDUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Plate", (string)null);
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Restaurant", (string)null);
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Menu", b =>
                {
                    b.HasOne("ProgramsManager.DAL.Database.DBModels.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.OrderPlate", b =>
                {
                    b.HasOne("ProgramsManager.DAL.Database.DBModels.Order", "Order")
                        .WithMany("OrdensPlates")
                        .HasForeignKey("OrderId");

                    b.HasOne("ProgramsManager.DAL.Database.DBModels.Plate", "Plate")
                        .WithMany("OrdersPlates")
                        .HasForeignKey("PlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Plate");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Plate", b =>
                {
                    b.HasOne("ProgramsManager.DAL.Database.DBModels.Menu", "Menu")
                        .WithMany("Plates")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Menu", b =>
                {
                    b.Navigation("Plates");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Order", b =>
                {
                    b.Navigation("OrdensPlates");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Plate", b =>
                {
                    b.Navigation("OrdersPlates");
                });

            modelBuilder.Entity("ProgramsManager.DAL.Database.DBModels.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
